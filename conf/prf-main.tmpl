##
## prf-main.tmpl -- by Dario Berzano <dario.berzano@cern.ch>
##
## Configuration file for the static PROOF cluster. Originally conceived by
## Martin Vala <mvala@cern.ch>.
##
## Do not edit this very file: rather, edit the Cheetah template. The
## configuration file itself is automatically generated by means of Cheetah[1].
##
## [1] http://www.cheetahtemplate.org/
##

# This file has been automatically generated by Cheetah: edit the corresponding
# template instead of changing it.

#
# Global configuration directives
#

# Administration path, that contains sockets
all.adminpath $TPL_VAR/admin

# The PROOF port (see Global variables): it is the only port opened, and it
# serves the rootd (not xrootd) protocol too
xpd.port $TPL_PROOFPORT

# The PROOF resources locator: static is the only one available, it reads the
# configuration from the given file. This configuration might be however
# specified in this very file - the only difference is that this file does not
# get dynamically reloaded
xpd.resource static $TPL_ETC/proof.conf

## This "if-fi" block configures all the nodes but the master as workers too, but
## it is not our case where we have only one machine
## if $TPL_MASTER_SHORT*
## else
##  xpd.role worker
## fi

# Who is the master, who is a worker?
# In alternative you can use xpd.role any if master is also a worker
if $TPL_MASTER_SHORT*
  xpd.role master
else
  xpd.role worker
fi

# ALICE group belongings are read from the following file. This option must be
# specified twice for very good reasons
xpd.groupfile $TPL_ETC/groups.alice.cf
xpd.putrc Proof.GroupFile: $TPL_ETC/groups.alice.cf

# The dataset manager runs on the PROOF master only
if $TPL_MASTER_SHORT*
##  xpd.datasetsrc file url:$AF_DATASETS mss:$AF_SHARED_DATA opt:-Av:As: rw=1
  xpd.stagereqrepo $AF_DATASETS
  # One week of cache
  xpd.datasetsrc alien cache:$AF_DATASETS_CACHE urltemplate:$AF_SHARED_DATA<path> cacheexpiresecs:604800
fi

# Working directory (a temporary one)
xpd.workdir $TPL_VAR/proofbox

# Environment of each worker/master
xpd.putenv AF_ALIROOT_DIR_TEMPLATE=$AF_ALIROOT_DIR_TEMPLATE

# To me it is unclear why these options go here - aren't they xrootd-specific?
xpd.poolurl root://$AF_MASTER/
xpd.namespace $AF_PROOF_EXPORT
#xpd.putrc Path.Localroot $AF_PROOF_EXPORT
xpd.putrc ProofServ.DataDir $AF_PROOF_EXPORT/aaf_data/
xpd.datadir $AF_PROOF_EXPORT/aaf_data/ aWM

### Location of merged files (create th new path is not existing)
##xpd.putrc Proof.OutputFile: root://alicecaf.cern.ch:11094//scratch/<group>/<user>/<file>?remote=1                                                                                                                                
##xpd.putrc XNet.Mkpath 1

# Submergers are not removed for now (we should compare AAF configuration)
xpd.putrc Proof.UseMergers 0

# After 10 minutes (600 s) any idle session is disconnected
xpd.putrc ProofServ.IdleTimeout 600

#
# Security configuration: authentication and authorization
#

# The security library
xpd.seclib libXrdSec.so

# We use GSI (Grid Security Infrastructure). Authentication is made over LDAP
sec.protparm gsi -gmapfun:libXrdSecgsiGMAPLDAP.so

# Configuration file for the LDAP query
sec.protparm gsi -gmapfunparms:$TPL_ETC/XrdSecgsiGMAPFunLDAP.cf

# Override subject/user mapping here (i.e. for admin purposes)
sec.protparm gsi -gridmap:$TPL_ETC/grid-mapfile

# Globus configuration for this machine. The dlgpxy:2 means that *your* proxy
# creates another delegated proxy on each PROOF client. Very useful if, i.e.,
# you want to access alien:// files from each machine running PROOF workers
xpd.sec.protocol gsi -crl:0 -dlgpxy:2 -certdir:$AF_ALIEN_DIR/globus/share/certificates -d:0 -cert:$TPL_GRID_SECURITY/hostcert.pem -key:$TPL_GRID_SECURITY/hostkey.pem -exppxy:<workdir>/<user>/.creds/x509_u<uid>

# Where to save delegations
xpd.putenv XrdSecGSIUSERPROXY=<workdir>/<user>/.creds/x509_u<uid>
xpd.putenv X509_USER_PROXY=<workdir>/<user>/.creds/x509_u<uid>
xpd.putenv XrdSecSSLUSERCERT=<workdir>/<user>/.creds/x509_u<uid>
xpd.putenv XrdSecSSLUSERKEY=<workdir>/<user>/.creds/x509_u<uid>

# Directory of valid CAs (used for standard SSL)
xpd.putenv XrdSecSSLCADIR=$AF_ALIEN_DIR/globus/share/certificates

# Important for AliEn, elsewhere TGrid::Connect() crashes
xpd.putenv GCLIENT_SERVER_LIST=pcapiserv03.cern.ch:10000|

# Directory of valid CAs (used for Globus extensions to SSL)
xpd.putenv XrdSecGSICADIR=$AF_ALIEN_DIR/globus/share/certificates

# See corresponding global variable above
xpd.putenv XrdSecGSISRVNAMES=$AF_MASTER

# Same thing as dlgpxy switch above
xpd.putrc XSec.GSI.DelegProxy 2

# Used to generate AliEn token
xpd.putenv alien_API_USER=<user>

# Packetizer obscure (to me) option...
#xpd.putrc Packetizer.MaxWorkersPerNode 1000

# See http://root.cern.ch/drupal/content/configuration-reference-guide#schedparam
xpd.schedparam mxsess:-1
##wmx:\$gProofMaxWorkersPerNode

# Quotas
xpd.putrc ProofServ.UserQuotas maxquerykept=5

# Packages
xpd.putrc Proof.GlobalPackageDirs $TPL_PACKAGES
xpd.exportpath $TPL_PACKAGES

# Memory limits in MiB (by default high number, meaning no limits)
xpd.putenv PROOF_RESMEMMAX=$AF_PROOF_LIMIT_RSS_KB
xpd.putenv PROOF_VIRTMEMMAX=$AF_PROOF_LIMIT_VIRT_KB

# If we use xrootd, we should, for security reasons, block rootd
xpd.rootd deny

## We don't use xrootd: use rootd to transfer merged files between workers and
## between master and client. This is a little bit insecure... PROOF's default
## is the same string without <user>, but we need it elsewhere it does not work:
## even if there is no authentication, a recognized user should be presented. The
## LOCALDATASERVER variable is used by the PROOF merger
##xpd.rootd allow mode:ro auth:none
##xpd.putenv LOCALDATASERVER=rootd://<user>@<host>:$TPL_PROOFPORT/

# Using xrootd on each server for data transfer (i.e., when merging files and
# not streamed data)
xpd.putenv LOCALDATASERVER=root://<user>@<host>:$TPL_XRDPORT/

### Allowed users
##xpd.allowedusers dberzano

##
## Dataset manager configuration
##

##dsmgrd.stagecmd /opt/aaf/alien/api/bin/xrdstagetool -d 0 \$URLTOSTAGE
##dsmgrd.sleepsecs 30
##dsmgrd.scandseveryloops 20

##dsmgrd.parallelxfrs 20
##dsmgrd.maxfilesinqueue 1000
##dsmgrd.corruptafterfails 10
##dsmgrd.apmonurl apmon://193.206.184.58
##dsmgrd.apmondsprefix PROOF::TAF::STORAGE_datasets

##dsmgrd.syncdseveryloops 10

##
## PROOF query monitoring (for accounting, etc.)
## See for details: http://root.cern.ch/drupal/content/enabling-query-monitoring
##

## This is to log using the syslog facility -- unrecommended, better on SQL
##xpd.putrc ProofServ.LogToSysLog a1

## This line enables SQL monitoring: several SQL lines might be specified
##xpd.putrc ProofServ.Monitoring: SQL mysql://localhost:3306 proofacc 8hysCAG5Hc9nA83 proofacc.proofquerylog,
##                                   ^^^^^^^^^^^^^^^^^^^^^^ ^^^^^^^^ ^^^^^^^^^^^^^^^ ^^^^^^^^ ^^^^^^^^^^^^^
##                                   MySQL host name + port username  cleartext pwd  database name of table

## MonALISA monitoring
##xpd.putrc +ProofServ.Monitoring: MonaLisa 193.206.184.58 PROOF::TAF::STORAGE_myproof
##                                         ^^^^^^^^^^^^^^ ^^^^^^^^^^^^^^^^^^^^^^^^^^^
##                                          ApMon server         MonALISA tag

#
# Monitoring
#

xpd.putrc ProofServ.Monitoring: SQL mysql://localhost:3306 proofacc 8hysCAG5Hc9nA83 proofacc.proofquerylog,
xpd.putrc +ProofServ.Monitoring: MonaLisa $TPL_MONA_HOST PROOF::TAF::STORAGE_myproof

#
# Available ROOT versions
#

# Current ROOT version (used to launch xproofd)
xpd.rootsys $AF_ROOT_PROOF current

# All ROOT versions
#for $RootVer in $TPL_ROOT_VER.split('|')
#if ($RootVer == '')
  #continue
#end if
xpd.rootsys $AF_ALICE_SW_DIR/ROOT/$RootVer VO_ALICE@ROOT::$RootVer
#end for
